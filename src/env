# vim: set ft=sh :
# gcloud
export CLOUDSDK_COMPUTE_ZONE=europe-north1-a
export CLOUDSDK_COMPUTE_REGION=europe-north1
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

# kubectl
export KUBECTL_EXTERNAL_DIFF="dyff between --omit-header --set-exit-code"

# shell / shell / bash
export HISTCONTROL="ignoredups:ignorespace"
export CLICOLOR=true
# remove zsh nagging on osx
export BASH_SILENCE_DEPRECATION_WARNING=1

# vim
export EDITOR=nvim
export VISUAL=nvim
export MANPAGER='nvim +Man!'

# homebrew
if [[ $(uname -p) -eq "arm" ]]; then
  export PATH=${HOME}/bin:/usr/local/bin:/opt/homebrew/bin:${PATH}
else
  export PATH=${HOME}/bin:/usr/local/bin:${PATH}
fi
#
# set paths for homebrew for man pages and scripts
if [[ -n $(which brew) ]]; then
    eval $(brew shellenv)
fi

# use git cloned version of goenv and tweak path to override system version
if [[ -d "$HOME/.goenv" ]]; then
    export GOENV_ROOT="$HOME/.goenv"
    export PATH="$GOENV_ROOT/bin:$PATH"
    export PATH="$GOENV_ROOT/shims:$PATH"
    eval "$(goenv init -)"
fi

# vscode
if [[ -x "/Applications/Visual Studio Code.app" ]]; then
    export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
fi

# glcoud
if [ -f "$HOME/.google-cloud-sdk/path.bash.inc" ] && [ -n "$BASH" ]; then
    . "$HOME/.google-cloud-sdk/path.bash.inc"
fi

if [ -f "$HOME/.google-cloud-sdk/path.zsh.inc" ] && [ -n "$ZSH_VERSION" ]; then
    . "$HOME/.google-cloud-sdk/path.zsh.inc"
fi


# krew
if [[ -d "$HOME/.krew/bin" ]]; then
    export PATH="${PATH}:${HOME}/.krew/bin"
fi

# cargo
if [[ -d "$HOME/.cargo/bin" ]]; then
    export PATH="${PATH}:${HOME}/.cargo/bin"
fi

# pyenv and pyenv-virtualenv
if [[ -s "$HOME/.pyenv/bin/pyenv" ]]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi


if [[ -x "$HOME/.poetry/bin/poetry" ]]; then
    export PATH="$HOME/.poetry/bin:$PATH"
fi


# load orbstack shell settings
source ~/.orbstack/shell/init.bash 2>/dev/null || :

# puppet tools require ruby@2.7
if [[ -d "/opt/homebrew/opt/ruby@2.7/bin" ]]; then
    export PATH="/opt/homebrew/opt/ruby@2.7/bin:$PATH"
fi

# load local env files which are not in git
for env_file in $(find $HOME -maxdepth 1 -name '.env.*'); do
    source ${env_file}
done
#
#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
if [[ -f "$HOME/.sdkman/bin/sdkman-init.sh" ]]; then
    export SDKMAN_DIR="$HOME/.sdkman"
    source "$HOME/.sdkman/bin/sdkman-init.sh"
fi
