# set -e

## bash ##
test -f ~/.bashrc && source ~/.bashrc
export CLICOLOR=true


## homebrew ##
if [[ $(uname -p) -eq "arm" ]]; then
  export PATH=${HOME}/bin:/usr/local/bin:/opt/homebrew/bin:${PATH}
else
  export PATH=${HOME}/bin:/usr/local/bin:/usr/local/homebrew/bin:${PATH}
fi

# breaking with bash5
# if [ -f $(brew --prefix)/etc/bash_completion ]; then
#    source $(brew --prefix)/etc/bash_completion
# fi
[[ -r "/opt/homebrew/etc/profile.d/bash_completion.sh" ]] && . "/opt/homebrew/etc/profile.d/bash_completion.sh"

# homebrew etc.
export PATH="/usr/local/bin:$PATH"

## kubectl ##
if $(which kubectl)>/dev/null; then
  source <(kubectl completion bash)
fi

alias k='kubectl'
complete -F __start_kubectl k

## promptline ##
# pulls prompt setup from vim airline
# setup in .vimrc.after
test -f ~/.bash/promptline.sh && source ~/.bash/promptline.sh


## Iterm2 ##
# integration must be loaded after promptline
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

# bash: Place this in .bashrc.
function iterm2_print_user_vars() {
	iterm2_set_user_var aws_environment $(echo $VAULTED_ENV)
}


## vim ##
export EDITOR=vim
export VISUAL=vim

# shell aliases
alias pycov="py.test --cov-report term-missing --cov='.'"
# https://www.electricmonk.nl/log/2015/06/22/keep-your-home-dir-in-git-with-a-detached-working-directory/
alias dgit='git --git-dir ~/.dotfiles/.git --work-tree=$HOME'

# highlight
alias hl='highlight'

## python ##
# https://hackercodex.com/guide/python-development-environment-on-mac-osx/
# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# pyenv-virtualenv
# This is sometimes very slow
# if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# pyenv
alias pyenv='LDFLAGS="${LDFLAGS} -L/usr/local/opt/zlib/lib -L/usr/local/opt/sqlite/lib" CPPFLAGS="${CPPFLAGS} -I/usr/local/opt/zlib/include -I/usr/local/opt/sqlite/include" PKG_CONFIG_PATH="${PKG_CONFIG_PATH} /usr/local/opt/zlib/lib/pkgconfig /usr/local/opt/sqlite/lib/pkgconfig" pyenv'

## Golang ##
# https://github.com/golang/protobuf/issues/795
export GOROOT=$(go env GOROOT)
export GOPATH=$(go env GOPATH)
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOROOT:$GOPATH:$GOBIN
# Add Visual Studio Code (code)
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/harald/.google-cloud-sdk/path.bash.inc' ]; then . '/Users/harald/.google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/harald/.google-cloud-sdk/completion.bash.inc' ]; then . '/Users/harald/.google-cloud-sdk/completion.bash.inc'; fi

if [[ -f $HOME/.env ]]; then
  source $HOME/.env
fi
