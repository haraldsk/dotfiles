# vim set ft=zsh:
# rather intrusive, testing zsh-autosuggestions instead
# if [ -f "$(brew --prefix)/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh" ]; then
#   source $(brew --prefix)/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh
# fi

# TODO: Configure keybindings
# This plugin provides a few widgets that you can use with bindkey:
# autosuggest-accept: Accepts the current suggestion.
# autosuggest-execute: Accepts and executes the current suggestion.
# autosuggest-clear: Clears the current suggestion.
# autosuggest-fetch: Fetches a suggestion (works even when suggestions are disabled).
# autosuggest-disable: Disables suggestions.
# autosuggest-enable: Re-enables suggestions.
# autosuggest-toggle: Toggles between enabled/disabled suggestions.
# For example, this would bind ctrl + space to accept the current suggestion.
#
# bindkey '^ ' autosuggest-accept
# if [ -f "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
#   source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# fi
#
# if type brew &>/dev/null; then
#   FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
#
#   autoload -Uz compinit
#   compinit
# fi

if [ -f "$HOME/.google-cloud-sdk/completion.zsh.inc" ]; then . "$HOME/.google-cloud-sdk/completion.zsh.inc"; fi

if $(which kubectl)>/dev/null; then
  source <(kubectl completion zsh)
  # completion works with kubectl aliased as k
  compdef k='kubectl'
fi

# 1password shell
if [[ -x `which op` ]]; then
    source <(op completion zsh)
fi
